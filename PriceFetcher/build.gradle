plugins {
    id 'java'
    id 'application'
    id 'jacoco'
    id 'org.springframework.boot' version '2.6.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
}


java {
    sourceCompatibility = JavaVersion.VERSION_16
    targetCompatibility = JavaVersion.VERSION_16
}

group 'org.monzon'
version '1.0'

repositories {
    mavenCentral()
}

jacoco {
    toolVersion = "0.8.11"
}

dependencies {
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.mockito:mockito-core:3.12.4'
    testImplementation 'org.mockito:mockito-junit-jupiter:3.12.4'

    implementation platform("com.squareup.okhttp3:okhttp-bom:4.12.0")
    implementation 'com.squareup.okhttp3:okhttp'
    implementation 'com.squareup.okhttp3:logging-interceptor'
    implementation 'com.google.code.gson:gson:2.10'
    implementation 'net.razorvine:pickle:1.3'
    implementation 'software.amazon.awssdk:sqs:2.23.0'
    implementation 'software.amazon.awssdk:core:2.23.0'
    implementation 'software.amazon.awssdk:auth:2.23.0'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.0'
    implementation 'ch.qos.logback:logback-classic:1.2.6'
    implementation 'org.springframework.boot:spring-boot-starter'
}

application {
    mainClassName = 'org.monzon.Wally.Main'
}

test {
    environment "FETCH_URL", "http://www.test.com"
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jar {
    manifest {
        attributes(
                'Main-Class': 'org.monzon.Wally.Main'
        )
    }

    duplicatesStrategy = 'exclude'

    from {
        configurations.runtimeClasspath.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
}